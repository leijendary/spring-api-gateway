info:
  app:
    organization: leijendary
    group: ${group}
    name: ${name}
    description: ${description}
    version: ${version}
  api:
    termsOfService:
    contact:
      name: Jonathan Leijendekker
      url: https://leijendary.com
      email:
    license:
      name: Jonathan Leijendekker
      url: https://leijendary.com

auth:
  audiences: http://localhost:8080
  jwkSetUri: https://leijendary.eu.auth0.com/.well-known/jwks.json

retry:
  retries: 3
  backoff:
    firstBackoff: 5
    maxBackoff: 20
    factor: 2

request:
  maxSize: 100MB

spring:
  application:
    name: \${info.app.name}
  main:
    bannerMode: log
  messages:
    basename: messages.access, messages.error
  cloud:
    discovery:
      client:
        simple:
          instances:
            sample:
              - uri: https://google.com
    gateway:
      globalcors:
        corsConfigurations:
          '[/**]':
            allowCredentials: true
            allowedOriginPatterns: '*'
            allowedMethods: '*'
            allowedHeaders: '*'
      httpclient:
        connectTimeout: 60000
        responseTimeout: 1m
        ssl:
          useInsecureTrustManager: true
        wiretap: true
      httpserver:
        wiretap: true
      loadbalancer:
        use404: true
      redisRateLimiter:
        config:
          defaultFilters:
            replenishRate: 10
            burstCapacity: 20
            requestedTokens: 1
    serviceRegistry:
      autoRegistration:
        enabled: false
  redis:
    host:
    port:

server:
  error:
    whitelabel:
      enabled: false
  http2:
    enabled: true
  port: 443
  ssl:
    enabled: true
    keyAlias: spring-boot
    keyStoreType: PKCS12
    keyStore: classpath:ssl/keystore.p12
    keyStorePassword: spring-boot

management:
  endpoint:
    gateway:
      enabled: true
    health:
      showDetails: ALWAYS
  endpoints:
    web:
      exposure:
        include: health, gateway, prometheus
  tracing:
    sampling:
      probability: 1.0
  zipkin:
    tracing:
      endpoint:
